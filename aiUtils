#!/bin/bash


p() {

  # initialisation
  mkdir -p ~/.temp ~/.temp/last
  touch ~/.temp/last/ai_chat
  unset output toLog
  input="$*"
  tokens=100
  temperature=1

  # cleaning input
  toLog=$(sed 's: \?\-t\?h\?c\?s\? \?[0-9]*\.\?[0-9]* \?::g' <<< "$input")
  cleanedInput="$toLog"
  toLog=$(echo "Human: $toLog\nAI: ")
  detectTemp=$(egrep -o "\-t [0-9]*.?[0-9]*" <<< "$input" \
  | egrep -o "[0-2].?[0-9]{0,2}")

  # analyse / format input
  if [[ "$input" == *"-s"* ]]; then
    tail -n 3 ~/.temp/last/ai_chat >> ~/.temp/last/ai_chat_saved
    return
  fi
  if [[ -n "$detectTemp" ]]; then
    temperature="$detectTemp"
  fi
  detectTokens=$(egrep -o "\-c [0-9]+" <<< "$input" | egrep -o "[0-9]+")
  if [[ -n "$detectTokens" ]]; then
    tokens="$detectTokens"
  fi
  detectLinesEmpty=$(egrep -o "\-h" <<< "$input")
  detectLines=$(egrep -o "\-h [0-9]+" <<< "$input")
  if [[ -n "$detectLinesEmpty" ]]; then
    if [[ -z "$detectLines" ]]; then detectLines=10; fi
    detectLines=$(echo "$(egrep -o '[0-9]+' <<< $detectLines)*2" | bc)
    input=$(cat ~/.temp/last/ai_chat | tail -n "$detectLines" | sed -z 's:\n:\\n:g')
    input="$input$toLog"
  else
    input="$toLog"
  fi

  # send request / formatting output
  output=$(curl -s https://api.openai.com/v1/engines/text-davinci-001/completions \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -d '{
      "prompt": "'"$input"'",
      "temperature": '"$temperature"',
      "max_tokens": '"$tokens"',
      "top_p": 1,
      "frequency_penalty": 0,
      "presence_penalty": 0.6,
      "stop": [" Human:", " AI:"] }' \
    | grep -Po '\[{"text": ".+?(?=", "index)' \
    | sed 's:\[{"text"\: "::' \
    | sed 's:\\n::g' \
    | sed 's:^ *::' \
    | sed 's: *$::'\
  )

  # print results
  echo "$output" | fold -sw "$COLUMNS"
  printf "$toLog$output\n\n" >> ~/.temp/last/ai_chat

}

sum() {

  # initialisation
  touch ~/.temp/last/ai_summarized
  unset output toLog
  input="$*"
  tokens=500
  temperature=0.7

  # analyse / format input
  if [[ "$input" == *"-s"* ]]; then
    tail -n 7 ~/.temp/last/ai_summarized >> ~/.temp/last/ai_summarized_saved
    return
  fi
  cat "$input" > /dev/null 2>&1
  if [[ "$?" == 0 ]]; then
    echo "Summarizing..."
    input=$(cat "$input" | sed -z 's:\n:\\n:g')
  fi

  # send request / formatting output
  output=$(curl -s  https://api.openai.com/v1/engines/text-davinci-001/completions \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -d '{
      "prompt": "Summarize this for a second-grade student:\n\n'"$input"'",
      "temperature": '"$temperature"',
      "max_tokens": '"$tokens"',
      "top_p": 1,
      "frequency_penalty": 0,
      "presence_penalty": 0 }' \
    | grep -Po '\[{"text": ".+?(?=", "index)' \
    | sed 's:\[{"text"\: "::' \
    | sed 's:\\n::g' \
    | sed 's:^ *::' \
    | sed 's: *$::'\
  )

  # print results
  echo "$output" | fold -sw "$COLUMNS"
  printf "Input:\n$input\n\nOutput:\n$output\n\n\n" >> ~/.temp/last/ai_summarized

}
