#!/bin/bash

ai() {

  args=($@)
  temp=1
  words=100
  mkdir -p ~/.temp ~/.temp/last
  touch ~/.temp/last/ai-chat
  unset tokens history
  for ((i=0; i < "${#args[@]}"; i++)); do
    if [[ "${args[i]}" =~ 't'[0-9]+ ]]; then
      temp="${args[i]//[^0-9]/}"
      if (("${temp//[^0-9]/}" > 20)); then
        echo "Max temp is 20. Using this value."
        temp=2
      else
        temp=$(echo "scale=1;$temp/10" | bc)
      fi
    elif [[ "${args[i]}" =~ 'w'[0-9]+ ]]; then
      words="${args[i]//[^0-9]/}"
      if (("$words" > 500)); then
        echo "Maximum word count is 500."
        echo "Resuming with this value..."
        words=500
      fi
    elif [[ "${args[i]}" =~ 'h'[0-9]+ ]]; then
      history="${args[i]//[^0-9]/}"
      history=$(tail -n $((history*3)) < ~/.temp/last/ai-chat)
      history=$(sed -z 's:\n:\\n:g' <<< "$history" | sed 's:\\n\\n:\\n:g')
    else
      tokens+="${args[i]} "
    fi
  done
  toUse="${history}Human: ${tokens:0:-1}\nAI: "
#  echo "$toUse"

  request=$(curl -s 'https://api.openai.com/v1/engines/text-davinci-002/completions' \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -d '{
      "prompt": "Human: '"$toUse"'.\nAI:",
      "temperature": '"$temp"',
      "max_tokens": '"$words"',
      "top_p": 1,
      "frequency_penalty": 0.0,
      "presence_penalty": 0.6,
      "stop": [" Human:", " AI:"]
    }'
  )

  output=$(echo "$request" | jq -r .choices[].text | tr -s '\n')
  output="${output:1}"
  echo -e "Human: ${tokens:0:-1}\nAI: ${output}\n" >> ~/.temp/last/ai-chat
  if [[ $(echo "$request" | jq -r .choices[].finish_reason) != 'stop' ]]; then
    output="${output} // MAX WORDS REACHED"
  else
    echo "$output"
  fi

}

aidel() {
  lines="${1//[^0-9]/}"
  if [[ -z "$lines" ]]; then
    echo 'Please specify a number of last prompts and answers to be deleted'
  else
    head -n-$((lines*3)) < ~/.temp/last/ai-chat > ~/.temp/last/ai-chat
  fi
}

essay() {

  args=($@)
  temp=0
  words=300
  mkdir -p ~/.temp ~/.temp/last
  touch ~/.temp/last/ai-essay
  unset tokens history
  for ((i=0; i < "${#args[@]}"; i++)); do
    if [[ "${args[i]}" =~ 't'[0-9]+ ]]; then
      temp="${args[i]//[^0-9]/}"
      if (("${temp//[^0-9]/}" > 20)); then
        echo "Max temp is 20. Using this value."
        temp=2
      else
        temp=$(echo "scale=1;$temp/10" | bc)
      fi
    elif [[ "${args[i]}" =~ 'w'[0-9]+ ]]; then
      words="${args[i]//[^0-9]/}"
      if (("$words" > 500)); then
        echo "Max word count is 500. Using this value."
        words=500
      fi
    else
      tokens+="${args[i]} "
    fi
  done
  toUse="${tokens:0:-1}"
#  echo "$toUse"

  request=$(curl -s 'https://api.openai.com/v1/engines/text-davinci-002/completions' \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -d '{
      "prompt": "Create an outline for an essay about '"$toUse"':",
      "temperature": '"$temp"',
      "max_tokens": '"$words"',
      "top_p": 1.0,
      "frequency_penalty": 0.0,
      "presence_penalty": 0.0
    }'
  )

  output=$(echo "$request" | jq -r .choices[].text | tr -s '\n')
  output="${output:1}"
  echo -e "${tokens:0:-1}\n${output}\n" >> ~/.temp/last/ai-essay
  if [[ $(echo "$request" | jq -r .choices[].finish_reason) != 'stop' ]]; then
    output="${output} // MAX WORDS REACHED"
  else
    echo
    echo "$output"
    echo
  fi

}

qna() {

  args=($@)
  temp=1
  words=100
  mkdir -p ~/.temp ~/.temp/last
  touch ~/.temp/last/ai-qna
  unset tokens history
  for ((i=0; i < "${#args[@]}"; i++)); do
    if [[ "${args[i]}" =~ 't'[0-9]+ ]]; then
      temp="${args[i]//[^0-9]/}"
      if (("${temp//[^0-9]/}" > 20)); then
        echo "Max temp is 20. Using this value."
        temp=2
      else
        temp=$(echo "scale=1;$temp/10" | bc)
      fi
    elif [[ "${args[i]}" =~ 'w'[0-9]+ ]]; then
      words="${args[i]//[^0-9]/}"
      if (("$words" > 500)); then
        echo "Maximum word count is 500."
        echo "Resuming with this value..."
        words=500
      fi
    elif [[ "${args[i]}" =~ 'h'[0-9]+ ]]; then
      history="${args[i]//[^0-9]/}"
      history=$(tail -n $((history*3)) < ~/.temp/last/ai-qna)
      history=$(sed -z 's:\n:\\n:g' <<< "$history" | sed 's:\\n\\n:\\n:g')
    else
      tokens+="${args[i]} "
    fi
  done
  toUse="${history}\nQ: ${tokens:0:-1}\nA: "
  echo "$toUse"

  request=$(curl -s 'https://api.openai.com/v1/engines/text-davinci-002/completions' \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $OPENAI_API_KEY" \
    -d '{
      "prompt": "Q: '"$toUse"'.\nA:",
      "temperature": '"$temp"',
      "max_tokens": '"$words"',
      "top_p": 1,
      "frequency_penalty": 0.0,
      "presence_penalty": 0.0,
      "stop": ["\n"]
    }'
  )

  echo "$request"

  output=$(echo "$request" | jq -r .choices[].text | tr -s '\n')
  output="${output:1}"
  echo -e "Q: ${tokens:0:-1}\nA: ${output}\n" >> ~/.temp/last/ai-chat
  if [[ $(echo "$request" | jq -r .choices[].finish_reason) != 'stop' ]]; then
    output="${output} // MAX WORDS REACHED"
  else
    echo "$output"
  fi

}
